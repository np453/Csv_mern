{"version":3,"sources":["components/home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Homepage","state","showdata","data","file","csv_data","page","setrow","handleChangePage","newpage","setState","handleChangeRowsPerPage","event","target","value","handleRadio","input","currentTarget","name","files","onClickHandler","a","FormData","append","config","headers","axios","post","console","log","columns","undefined","this","length","i","push","id","label","minWidth","className","for","Button","variant","component","type","onChange","style","display","onClick","Paper","width","TableContainer","maxHeight","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","align","TableBody","row","hover","role","tabIndex","format","code","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","onChangeRowsPerPage","Component","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.081182be.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\nclass Homepage extends Component {\r\n    state={\r\n        showdata:false,\r\n        data:{\r\n            file:null\r\n        },\r\n        csv_data: [[],[]],\r\n        page: 0,\r\n        setrow: 0\r\n    }\r\n    handleChangePage= (newpage)=>{\r\n        this.setState({page: newpage});\r\n    }\r\n    handleChangeRowsPerPage = (event) => {\r\n        this.setState({setrow: +event.target.value})\r\n        this.setState({page: 0});\r\n      };\r\n    handleRadio = ({currentTarget:input}) => {\r\n        const data = {...this.state.data};\r\n        data[input.name] = input.value;\r\n        if(input.name === 'file')data[input.name] = input.files[0]\r\n        this.setState({ data });\r\n    };\r\n    onClickHandler= async() =>{\r\n        const data = new FormData();\r\n        data.append('type', \"csv\")\r\n        data.append('file',this.state.data.file);\r\n        const config={\r\n            headers:{\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        }\r\n        // console.log(data)\r\n        const {data:csv_data} = await axios.post('http://localhost:1919/api/csv',data,config);\r\n        console.log(csv_data)\r\n        this.setState({csv_data:csv_data});\r\n        this.setState({showdata:true});\r\n    }\r\n    render() {\r\n        const columns = [];\r\n        \r\n        const csv_data =this.state.csv_data === undefined ? [[1],[1]] : this.state.csv_data;\r\n        const length = csv_data[0].length === undefined ? 0 : csv_data[0].length; \r\n        for(var i=0; i<length; i++) {\r\n            columns.push({id:i,label:csv_data[0][i],minWidth:100})\r\n        }\r\n        \r\n        \r\n        return (\r\n            <div className=\"container-fluid d-flex flex-column align-items-center\">\r\n                 <div className=\"body-wrapper\">\r\n                     <h1 className=\"title_\">Upload CSV File</h1>\r\n                     <div className=\"row container-fluid d-flex justify-content-center mt-4 mb-4\">\r\n                         <label for=\"file\">\r\n                            <Button variant=\"contained\" component=\"span\" className=\"button_\"> Select</Button>\r\n                         </label>\r\n                         <input type=\"file\" id=\"file\" name=\"file\" onChange={this.handleRadio} style={{display:\"none\"}} />\r\n                         <Button onClick={this.onClickHandler} variant=\"contained\" component=\"span\" className=\"button_ ml-5\">Load</Button>\r\n                     </div>\r\n                 </div>\r\n                 {this.state.showdata && \r\n                 <div className=\"table-wrapper\">\r\n                    <Paper style={{width: '100%'}}>\r\n                        <TableContainer style={{maxHeight:\"240  \"}}>\r\n                            <Table stickyHeader aria-label=\"sticky table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                    key={column.id}\r\n                                    align={column.align}\r\n                                    style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                    {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {csv_data[1].map((row) => {\r\n                                return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                    {columns.map((column) => {\r\n                                        const value = row[column.id];\r\n                                        return (\r\n                                        <TableCell key={column.id}>\r\n                                            {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                        </TableCell>\r\n                                        );\r\n                                    })}\r\n                                    </TableRow>\r\n                                );\r\n                                })}\r\n                            </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[10, 25, 100]}\r\n                            component=\"div\"\r\n                            count={csv_data[1].length}\r\n                            rowsPerPage={this.state.setrow}\r\n                            page={this.state.page}\r\n                            onChangePage={this.handleChangePage}\r\n                            onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                        />\r\n                    </Paper>\r\n\r\n                 </div>\r\n                 }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Homepage;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n//scss file\nimport \"./sass/main.scss\";\n\n//component\nimport Homepage from './components/home';\n\nfunction App() {\n  return (\n    <div>\n       <Router>\n        {/* <ScrollToTop> */}\n        <switch>\n          <Route path=\"/\" exact component={Homepage} />\n        </switch>\n        {/* </ScrollToTop> */}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'font-awesome/css/font-awesome.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}